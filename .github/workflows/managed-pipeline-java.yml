name: "Java Build and Vulnerability Scan"

on:
  workflow_call: # Makes this a reusable workflow
    inputs:
      java-version:
        description: "The Java version to set up"
        required: true
        default: "17"
        type: string
      scan-type:
        description: "The type of vulnerability scan to run"
        required: false
        default: "fs"
        type: string
      docker-registry:
        description: "Docker registry for pushing images"
        required: false
        type: string
        default: "ghcr.io"
      image-name:
        description: "The docker image name"
        required: true
        type: string
      docker-tags:
        description: "Tags for the Docker image"
        required: false
        type: string
        default: "latest"
      slack-url:
        description: "webhook url"
        type: string
        default: ""

#TODO: remove the code checkout for each job once we start using self hosted runners
jobs:
  build-code:
    name: Build Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        if: ${{ inputs.java-version == '17' }}
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up JDK 21
        if: ${{ inputs.java-version == '21' }}
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Build with Maven
        run: mvn compile
        shell: bash

  build-scan-push-image:
    name: Build scan and push docker image
    needs: build-code
    runs-on: ubuntu-latest
    steps:
      - name: Build scan and push docker image
        uses: itaydj/managed-pipeline/.github/actions/build-scan-push@main
        with:
          registry: ${{ inputs.docker-registry }}
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ github.repository }}/${{ inputs.image-name }}
          image-tag: ${{ inputs.docker-tags }}


  notify-slack:
    if: failure() # Only runs if the "build" job fails
    needs: build-scan-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ inputs.slack-url }}
          webhook-type: webhook-trigger
          payload: |
            text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"