name: "Java Build and Vulnerability Scan"

on:
  workflow_call: # Makes this a reusable workflow
    inputs:
      python-version:
        description: "The Python version to set up"
        required: true
        default: "3.9"
        type: string
      scan-type:
        description: "The type of vulnerability scan to run"
        required: false
        default: "fs"
        type: string
      docker-tags:
        description: "Tags for the Docker image"
        required: true
        type: string
      docker-registry:
        description: "Docker registry for pushing images"
        required: false
        type: string
        default: "ghcr.io"
    secrets:
      MY_PAT:
        description: "Personal access token for Docker registry login"
        required: false

#TODO: remove the code checkout for each job once we start using self hosted runners
jobs:
  python-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest

  build-scan-push-image:
    name: Build scan and push docker image
    needs: build-code
    runs-on: ubuntu-latest
    steps:
      - name: Build scan and push docker image
        uses: itaydj/managed-pipeline/.github/actions/build-scan-push@main
        with:
          registry: ${{ inputs.docker-registry }}
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ github.repository }}/${{ inputs.image-name }}
          image-tag: ${{ inputs.docker-tags }}
