name: "Java Build and Vulnerability Scan"

on:
  workflow_call: # Makes this a reusable workflow
    inputs:
      python-version:
        description: "The Python version to set up"
        required: true
        default: "3.9"
        type: string
      scan-type:
        description: "The type of vulnerability scan to run"
        required: false
        default: "fs"
        type: string
      image-name:
        description: "The docker image name"
        required: false
        type: string
      docker-tags:
        description: "Tags for the Docker image"
        required: false
        type: string
        default: "latest"
      docker-registry:
        description: "Docker registry for pushing images"
        required: false
        type: string
        default: "ghcr.io"
      docker-image-full-name:
        description: "the full image name with its tag"
        required: false
        type: string
        default: "${{ inputs.docker-registry }}/${{ github.repository }}:${{ inputs.image-tags }}"
      code-coverage:
        description: "generate coverage report"
        required: false
        type: boolean
        default: false

    secrets:
      MY_PAT:
        description: "Personal access token for Docker registry login"
        required: false


#TODO: remove the code checkout for each job once we start using self hosted runners
jobs:
  python-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: pip install -r requirements.txt

  run-tests:
    runs-on: ubuntu-latest
    needs: python-setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          pip install pytest pytest-cov genbadge defusedxml
      - name: Run tests
        if: ${{ inputs.code-coverage == false }}
        run: pytest
      - name: Run tests and coverage
        if: ${{ inputs.code-coverage == true }}
        run: |
          pytest --cov=. --cov-report=xml
          genbadge coverage --input-file coverage.xml --output-file coverage-badge.svg

      - name: Commit coverage badge
        if: ${{ inputs.code-coverage == true }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add coverage-badge.svg
          git commit -m "Update coverage badge"
          git push

  build-scan-push-docker-image:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Build scan and push docker image
        uses: itaydj/managed-pipeline/.github/actions/build-scan-push@main
        with:
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}
